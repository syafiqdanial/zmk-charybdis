#include <behaviors.dtsi>

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#include "zmk-helpers/helper.h"

#define HM_TAPPING_TERM 180
#define HM_TAPPING_TERM_FAST 150
#define HM_PRIOR_IDLE 120

#define COMBO_TERM_FAST 35
#define COMBO_TERM_SLOW 40
#define COMBO_PRIOR_IDLE 80

#define BASE 0
#define NUMS 1
#define SYM 2
#define BLU 3
#define SCROLL 4
#define SNIPE 5
#define AUTO 6

#include "zmk-helpers/key-labels/34.h"                                      // key-position labels

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define KEYS_T                 LH1 LH0 RH0 RH1                              // thumb keys

&lt {
    tapping-term-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        //INFO: Mouse clicks - left hand
        combo_mouse_left_click_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp LCLK>;
            key-positions = <11 12>;
        };

        combo_mouse_right_click_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp RCLK>;
            key-positions = <12 13>;
        };

        combo_mouse_middle_click_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp MCLK>;
            key-positions = <11 12 13>;
        };

        //INFO: Mouse clicks - right hand
        combo_mouse_left_click_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;  
        };

        combo_mouse_right_click_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp RCLK>;
            key-positions = <17 18>;
        };

        combo_mouse_middle_click_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mkp MCLK>;
            key-positions = <16 17 18>;
        };

        //INFO: Layer activation
        combo_layer_blu_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 4>;
            key-positions = <38 39>;
        };

        combo_layer_blu_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 3>;
            key-positions = <21 22 23>;
        };

        combo_layer_scroll_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 4>;
            key-positions = <21 22 23>;
        };

        combo_layer_snipe_l {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 5>;
            key-positions = <20 21 22>;
        };

        combo_layer_scroll_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 4>;
            key-positions = <26 27 28>;
        };

        combo_layer_snipe_r {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 5>;
            key-positions = <27 28 29>;
        };

        combo_layer_auto {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 5>;
            key-positions = <3 4>;
        };

        combo_layer_dan {
            timeout-ms = <COMBO_TERM_FAST>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            bindings = <&mo 2>;
            key-positions = <33 34>;
        };
    };

    macros {
         roundbkt: round_brackets {
            label= "round_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>;
         };
         
         squarebkt: square_brackets {
            label= "square_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>;
         };
         
         curlbkt: curl_brackets {
            label= "curl_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>;
         };
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_TAPPING_TERM_FAST>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_TAPPING_TERM_FAST>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };
    };

    chosen {
      zmk,physical-layout = &charybdis_5col_layout;
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "BASE";
            bindings = <
  &kp Q         &kp W         &kp E          &kp R          &kp T             &kp Y           &kp U          &kp I          &kp O         &kp P
  &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LSHFT F  &kp G             &kp H           &hm_r RSHFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r SEMI SQT
  &lt 4 Z       &lt 4 X       &kp C          &kp V          &kp B             &lt 2 N         &kp M          &kp COMMA      &lt 4 DOT     &mt BSLH FSLH
                              &lt 2 TAB      &lt 1 SPACE    &lt 5 ESC         &lt 3 ENTER     &hm_r RSHFT BSPC
            >;
        };

        NUMS {
            display-name = "NUMS";
            bindings = <
  &kp KP_PLUS     &kp N1     &kp N2     &kp N3     &kp LPAR              &kp RPAR     &kp HOME  &kp UP   &kp END   &kp PG_UP
  &kp KP_MINUS    &kp N4     &kp N5     &kp N6     &kp N0                &kp EQUAL    &kp LEFT  &kp DOWN &kp RIGHT &kp PG_DN
  &kp KP_MULTIPLY &kp N7     &kp N8     &kp N9     &kp DOT               &kp ENTER    &kp CAPS  &none    &none     &none
                             &none      &none      &none                 &kp DEL      &kp BSPC
            >;a
        };

        SYM {
            display-name = "SYM";
            bindings = <
  &roundbkt  &squarebkt &curlbkt       &kp GRAVE      &kp TILDE             &kp CARET  &kp F1  &kp F2   &kp F3   &kp F4
  &kp EXCL   &kp AT     &kp HASH       &kp DOLLAR     &kp PIPE              &none      &kp F5  &kp F6   &kp F7   &kp F8
  &kp PRCNT  &kp CARET  &kp AMPERSAND  &kp BACKSLASH  &kp UNDERSCORE        &none      &kp F9  &kp F10  &kp F11  &kp F12
                        &none          &none          &none                 &kp DEL    &kp BSPC
            >;
        };
        };

        BLU {
            display-name = "BLU";
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &none        &none         &none         &bt BT_CLR    &none
  &none         &none         &none         &none         &none                 &none        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP
  &none         &none         &none         &none         &bootloader           &bootloader  &none         &none         &none         &none
                              &sys_reset    &none         &none                 &none        &none
            >;
        };

        SCROLL {
            display-name = "SCROLL";
            bindings = <
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans    &trans    &trans  &trans
            >;
        };

        SNIPE {
            display-name = "SNIPE";
            bindings = <
                &trans  &trans  &trans  &trans    &trans    &trans  &trans          &trans           &trans          &trans
                &trans  &trans  &trans  &trans    &trans    &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &msc SCRL_DOWN  &msc SCRL_UP
                &trans  &trans  &trans  &trans    &trans    &trans  &trans          &trans           &trans          &trans
                                &trans  &trans    &trans    &trans  &trans
            >;
        };

        AUTO {
            display-name = "AUTO";
            bindings = <
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans    &trans    &trans  &trans
            >;
        };
    };
};
